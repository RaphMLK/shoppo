server:
  port: 8082

shoppo:
  vfp:
    cron: "${CRON_VFP: * 0 * * * *}"
    zone: "Europe/Paris"
    seuil_status : ${VFP_SEUIL_STATUS:5}

spring:
  rabbitmq:
    host: ${RABBIT_HOST:172.28.100.26}
    port: ${RABBIT_PORT:5674}
    username: ${RABBIT_USERNAME:shoppo}
    password: ${RABBIT_PASSWORD:shoppo2020}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${PG_HOST:172.28.100.26}:${PG_PORT:5432}/${PG_DB:antho}
    username: ${PG_USER:shoppo}
    password: ${PG_PASSWORD:shoppo2020}
    hikari:
      maximum-pool-size: 1
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: false
mq:
  x-message-ttl : 5000
  exchange :
    client : "exchange_client"
    notification: "exchange_notification"
  queue :
    reset-password : "queue_client_reset_password"
    create-client : "queue_create_client"
    login : "queue_client_login"
    change-password-need: "queue_change_password_need_client"
    get-client: "queue_get_client"
    update-solde : "queue_update_solde_client"
    get-client-qrcode: "queue_get_client_qrcode"
    update-avantage: "queue_update_avantage"
    get-all-avantage : "queue_get_all_avantage"
    is-park: "queue_is_park"
    is-transport: "queue_is_transport"
    notification :
      reset-password : "queue_notification_reset_password"
      create-client : "queue_notification_create_client"
  routing-key :
    reset-password : "client_reset_password"
    create-client : "create_client"
    login : "client_login"
    change-password-need : "client_change_password_need"
    update-solde : "update_solde"
    get-client: "get_client"
    get-client-qrcode: "get_client_qrcode"
    update-avantage: "update_avantage"
    get-all-avantage: "get_all_avantage"
    is-park: "is_park"
    is-transport: "is_transport"
    notification:
      reset-password: "reset_password"
      create-client: "create_client"